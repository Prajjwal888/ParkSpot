<% layout('layouts/boilerplate.ejs') %>
    <link rel="stylesheet" href="/stylesheets/stars.css">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css">
    <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"></script>

    <div class="row">
        <div class="col-md-6">
            <div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel">
                <div class="carousel-inner">
                    <% parking.images.forEach((img, i)=> { %>
                        <div class="carousel-item <%= i === 0 ? 'active' : '' %>">
                            <img src="<%= img.url %>" class="d-block w-100" alt="">
                        </div>
                        <% }) %>
                </div>
                <% if (parking.images.length> 1) { %>
                    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls"
                        data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls"
                        data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                    <% } %>
            </div>

            <div class="card mb-3">
                <div class="card-body">
                    <h5 class="card-title">
                        <%= parking.title %>
                    </h5>
                    <p class="card-text">
                        <%= parking.description %>
                    </p>
                </div>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item text-muted">
                        <%= parking.location %>
                    </li>
                    <li class="list-group-item text-muted">Submitted By <%= parking.author.username %>
                    </li>
                    <li class="list-group-item">$<%= parking.price %>/night</li>
                </ul>

                <% if (currentUser && parking.author.equals(currentUser._id)) { %>
                    <div class="card-body">
                        <a class="card-link btn btn-info" href="/parkings/<%= parking._id %>/edit">Edit</a>
                        <form class="d-inline" action="/parkings/<%= parking._id %>?_method=DELETE" method="POST">
                            <button class="btn btn-danger">DELETE</button>
                        </form>
                    </div>
                    <% } %>
                        <div class="card-footer text-muted">2 days ago</div>
            </div>
        </div>

        <!-- Right Column: Map -->
        <div class="col-md-6">
            <div id="map-container">
                <div id="map"></div>
            </div>
        </div>
    </div>

    <!-- Review Section -->
    <div class="row mt-4">
        <% if (currentUser) { %>
            <div class="col-12">
                <h2>Leave a Review</h2>
                <br>
                <form action="/parkings/<%= parking._id %>/reviews" method="POST" class="mb-3 validated-form"
                    novalidate>
                    <div class="mb-2">
                        <fieldset class="starability-basic">
                            <input type="radio" id="no-rate" class="input-no-rate" name="review[rating]" value="1"
                                checked aria-label="No rating." />
                            <input type="radio" id="first-rate1" name="review[rating]" value="1" />
                            <label for="first-rate1" title="Terrible">1 star</label>
                            <input type="radio" id="first-rate2" name="review[rating]" value="2" />
                            <label for="first-rate2" title="Not good">2 stars</label>
                            <input type="radio" id="first-rate3" name="review[rating]" value="3" />
                            <label for="first-rate3" title="Average">3 stars</label>
                            <input type="radio" id="first-rate4" name="review[rating]" value="4" />
                            <label for="first-rate4" title="Very good">4 stars</label>
                            <input type="radio" id="first-rate5" name="review[rating]" value="5" />
                            <label for="first-rate5" title="Amazing">5 stars</label>
                        </fieldset>
                    </div>

                    <div class="mb-3">
                        <label class="form-label" for="body">Review</label>
                        <textarea class="form-control" name="review[body]" id="body" cols="30" rows="3"
                            required></textarea>
                    </div>

                    <div class="valid-feedback">Looks good!</div>
                    <button class="btn btn-success">Submit</button>
                </form>
            </div>
            <% } %>

                <div class="col-12 mt-4">
                    <% parking.reviews.forEach((review)=> { %>
                        <div class="card mb-3">
                            <div class="mb-3 card-body">
                                <h5 class="card-subtitle mb-2 text-muted">
                                    <%= review.author.username %>
                                </h5>
                                <h5 class="card-title">Rating: <%= review.rating %>
                                </h5>
                                <p class="starability-result" data-rating="<%= review.rating %>">Rated: <%=
                                        review.rating %>
                                </p>
                                <p class="card-text">Review: <%= review.body %>
                                </p>

                                <% if (currentUser && review.author.equals(currentUser._id)) { %>
                                    <form action="/parkings/<%= parking._id %>/reviews/<%= review._id %>?_method=DELETE"
                                        method="POST">
                                        <button class="btn btn-sm btn-danger">Delete</button>
                                    </form>
                                    <% } %>
                            </div>
                        </div>
                        <% }) %>
                </div>
    </div>

    <style>
        #map-container {
            width: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 20px;
        }

        #map {
            height: 500px;
            width: 500px;
            border: 1px solid #ddd;
            border-radius: 8px;
        }
    </style>

    <script>
        (async function () {
            const parkingLocation = "<%= parking.location %>";

            async function getCoordinates(address) {
                const url = `https://nominatim.openstreetmap.org/search?format=json&limit=1&q=${encodeURIComponent(address)}`;
                try {
                    const response = await fetch(url);
                    const data = await response.json();
                    if (data.length > 0) {
                        return { latitude: parseFloat(data[0].lat), longitude: parseFloat(data[0].lon) };
                    } else {
                        throw new Error("No results found");
                    }
                } catch (error) {
                    console.error("Error fetching coordinates:", error);
                    return null;
                }
            }

            const coordinates = await getCoordinates(parkingLocation);
            if (!coordinates) {
                console.error("Unable to fetch coordinates for map initialization.");
                return;
            }

            const latitude = coordinates.latitude;
            const longitude = coordinates.longitude;

            // Initialize the map centered on the parking location
            var map = L.map('map').setView([latitude, longitude], 13);

            // Add OpenStreetMap tiles
            L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
                maxZoom: 19,
                attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
            }).addTo(map);

            // Add a marker for the parking location
            L.marker([latitude, longitude]).addTo(map).bindPopup("<%= parking.title %>").openPopup();
        })();
    </script>